{"version":3,"sources":["components/markdownInput.js","components/markdownoutput.js","App.js","reportWebVitals.js","index.js"],"names":["MarkdownInput","props","handleChange","evt","toggle","e","preventDefault","element2","document","getElementById","style","localLiked","state","expand","setState","width","height","margin","bind","className","onClick","this","id","class","value","initialState","onChange","Component","MarkdownOutput","source","initialMarkdownInput","App","markdownInput","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0OAEqBA,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAMVC,aAAa,SAACC,GACV,EAAKF,MAAMC,aAAaC,IART,EAUnBC,OAAO,SAACC,GACJA,EAAEC,iBACF,IAAIC,EAASC,SAASC,eAAe,UAAUC,MAC3CC,EAAa,EAAKC,MAAMC,OAC5BF,GAAcA,EACd,EAAKG,SAAL,2BACO,EAAKF,OADZ,IACmBC,OAAOF,KAEJ,GAAnB,EAAKC,MAAMC,QAEVN,EAASQ,MAAM,MACfR,EAASS,OAAQ,QACjBT,EAASU,OAAS,SAIlBV,EAASQ,MAAM,OACfR,EAASS,OAAQ,QACjBT,EAASU,OAAS,SA1BtB,EAAKL,MAAQ,CACTC,QAAO,GAEX,EAAKT,OAAS,EAAKA,OAAOc,KAAZ,gBALC,E,qDAiCV,IAAD,OACJ,OACI,sBAAKC,UAAU,YAAf,UACI,sBAAKA,UAAU,kBAAf,mBAEG,qBAAKA,UAAU,YAAYC,QAAS,SAACf,GAAD,OAAO,EAAKD,OAAOC,IAAvD,SACuB,GAArBgB,KAAKT,MAAMC,OAAmB,mBAAGM,UAAU,qBAA6B,mBAAGA,UAAU,wBAG9F,0BAAWG,GAAG,SAASC,MAAM,2CAA2CC,MAAOH,KAAKpB,MAAMwB,aAAcC,SAAUL,KAAKnB,sB,GA5CxFyB,a,iBCCtBC,E,uKAEb,OACI,sBAAKT,UAAU,YAAf,UACA,qBAAKI,MAAM,cAAX,qBAGA,qBAAKD,GAAG,UAAUC,MAAM,aAAxB,SACI,cAAC,IAAD,CAAgBM,OAAQR,KAAKpB,MAAM4B,kB,GARPF,aCGtCG,EAAqB,umCA8CNC,E,4MACnBnB,MAAM,CACJoB,cAAeF,G,EAEjB5B,aAAa,SAACC,GACZ,EAAKW,SAAS,CACZkB,cAAc7B,EAAI8B,OAAOT,S,uDAK3B,OACE,sBAAKL,UAAU,MAAf,UACE,qBAAKA,UAAU,uBAAf,SACA,cAAC,EAAD,CAAeM,aAAcJ,KAAKT,MAAMoB,cAAe9B,aAAcmB,KAAKnB,iBAE1E,qBAAKiB,UAAU,wBAAf,SACA,cAAC,EAAD,CAAiBU,OAAQR,KAAKT,MAAMoB,yB,GAjBXL,aCxClBO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASC,eAAe,SAM1ByB,K","file":"static/js/main.9c84540c.chunk.js","sourcesContent":[" import React, {Component} from 'react'\r\n import '../index.css'\r\nexport default class MarkdownInput extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expand:false\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n      }\r\n    handleChange=(evt)=>{\r\n        this.props.handleChange(evt)\r\n    }\r\n    toggle=(e)=>{\r\n        e.preventDefault();\r\n        var element2=document.getElementById(\"editor\").style;\r\n        let localLiked = this.state.expand;\r\n        localLiked = !localLiked;\r\n        this.setState({\r\n            ...this.state, expand:localLiked\r\n        })\r\n        if(this.state.expand==false)\r\n        {\r\n            element2.width=\"96%\";\r\n            element2.height =\"100vh\";\r\n            element2.margin = \"auto\"\r\n\r\n        }\r\n        else{\r\n            element2.width=\"100%\";\r\n            element2.height =\"200px\";\r\n            element2.margin = \"auto\"\r\n\r\n        }\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"card edit\" >\r\n                <div className=\"card-header row\">\r\n                    Editor\r\n                   <div className=\"expansion\" onClick={(e) => this.toggle(e)}> \r\n                    {this.state.expand == false ? (<i className=\"fa fa-arrows-alt\"></i> ) : (<i className=\"fa fa-compress\"></i> )}\r\n                    </div>\r\n                    </div>\r\n            <textarea  id=\"editor\" class=\" card-body md-textarea form-control edit\" value={this.props.initialState} onChange={this.handleChange}>    \r\n            </textarea>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React,{Component} from 'react'\r\nimport ReactMarkdown from 'react-markdown';\r\nimport '../index.css'\r\nexport default class MarkdownOutput extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"card prev\" >\r\n            <div class=\"card-header\">\r\n                Preview\r\n            </div>\r\n            <div id=\"preview\" class=\" card-body\" >\r\n                <ReactMarkdown  source={this.props.source} />\r\n            </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","\nimport React, {Component} from 'react'\nimport MarkdownInput from './components/markdownInput'\nimport MarkdownOutput from './components/markdownoutput'\nimport './index.css'\n\nconst initialMarkdownInput=\n`\n# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\nexport default class App extends Component{\n  state={\n    markdownInput: initialMarkdownInput\n  }\n  handleChange=(evt)=>{\n    this.setState({\n      markdownInput:evt.target.value\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"col-md-8 offset-md-2\">\n        <MarkdownInput initialState={this.state.markdownInput} handleChange={this.handleChange} />\n        </div>\n        <div className=\"col-md-10 offset-md-1\">\n        <MarkdownOutput  source={this.state.markdownInput} />\n        </div> \n      </div>\n    );\n  }\n \n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}